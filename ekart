Commands to run website on AWS Cloud-:


   #Docker
     # Add Docker's official GPG key:
     sudo apt-get update
     sudo apt-get install ca-certificates curl gnupg
     sudo install -m 0755 -d /etc/apt/keyrings
     curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
     sudo chmod a+r /etc/apt/keyrings/docker.gp
     # Add the repository to Apt sources:
     echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
     $(. /etc/os-release && echo "$VERSION_CODENAME") stable" |   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
     sudo apt-get update
     sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
     docker -v



============================================================================================================================================================
   #JDK
     sudo apt update
     sudo apt install fontconfig openjdk-17-jre
     java -version
     openjdk version "17.0.8" 2023-07-18
     OpenJDK Runtime Environment (build 17.0.8+7-Debian-1deb12u1)
     OpenJDK 64-Bit Server VM (build 17.0.8+7-Debian-1deb12u1, mixed mode, sharing)
     snap install openjdk
     clear
     openjdk -v
===========================================================================================================================================================



   #Jenkins
     sudo wget -O /usr/share/keyrings/jenkins-keyring.asc   https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
     echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]   https://pkg.jenkins.io/debian-stable binary/ | sudo tee   /etc/apt/sources.list.d/jenkins.list > /dev/null
     sudo apt-get update
     sudo apt-get install jenkins
     jenkins -v
     sudo systemctl enable jenkins
     sudo systemctl start jenkins
     sudo systemctl status jenkins
    

===========================================================================================================================================================


   
   #Python
    sudo apt update
    sudo apt install python3
    apt install python-pip
    python3 --version



  ==========================================================================================================================================================


   #Install Python dependencies
   vi requirements.txt

Add in the file-:
Flask==3.0.0
Flask-SQLAlchemy==3.1.1
Flask-CORS==4.0.0 
Flask-Migrate==4.0.5
psycopg2-binary==2.9.9

   
   cat requirements.txt
   pip install -r requirements.txt
   python3 -m flask --version

=============================================================================================================================================================




   #Install Postgresql
   sudo apt update
   sudo apt install postgresql postgresql-contrib
   sudo -u postgres psql
     
#password enter
\password postgres

=============================================================================================================================================================



   
#Create database
 CREATE DATABASE flask;
 \list
 \c flask
 \dt
 select * from public.checkout_data;

============================================================================================================================================================



 #Git Clone
 git clone https://github.com/harnoor-singh1/Techlanders_ecom.git
 cd Techlanders_ecom
 ls
 cd ekart
 vi app.py
#Change user name of database
#Change password
#Change Port No.
#Change Database name
 python3 app.py

============================================================================================================================================================




#Install and run Gunicorn in source code directory
pip install gunicorn
gunicorn -b 0.0.0.0:5000 app:app



============================================================================================================================================================















